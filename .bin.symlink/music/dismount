#!/usr/bin/env bash
# unmount removable drives

# Copyright (c) 2013-2016 Jason W Ryan
# The MIT License (MIT) http://opensource.org/licenses/MIT

target=( $(awk '/media\/[\^A-Z0-9]/ {print $2}' /proc/mounts) )
shares=(Safebox Scout Sentinel)

checkbusy() {
  grep -q "PID" <(lsof +D "${target[@]}" 2>/dev/null)
  if (( $? == 0 )); then
    printf "%s\n" "${target##*/} busy…"
    exit 1
  fi
}

exstatus() {
  if (( $? == 0 )); then
    printf "%s\n" "${target##*/} unmounted…"
  else
    printf "%s\n" "Failed to unmount."
  fi
}

# check for multiple devices
if (( ${#target[@]} > 1 )); then
  PS3="Select your device to unmount: "
  printf "%s\n" "There are ${#target[@]} devices mounted"
  select dev in "${target[@]}"; do
    target="$dev"
    break
  done
fi

# check for share
for drive in "${shares[@]}"; do
  if [[ $drive = ${target##*/} ]]; then
    share="$drive"
  fi
done

# options per filesystem
if [[ -n $target ]]; then
  for drive in "${shares[@]}"; do
    if [[ $drive = ${target##*/} && ${target##*/} = Safebox ]]; then
      cmd=$(sudo safebox close)
    elif [[ $drive = ${target##*/} ]]; then
      cmd=$(sudo umount "$target")
    else
      cmd=$(udiskie-umount -d "$target" &>/dev/null)
    fi
  done
# do it
checkbusy
# flush to disk
/usr/bin/sync && $cmd
exstatus
else
  printf "%s\n" "No drive mounted!"
fi

# vim:set ts=2 sts=2 sw=2 et:
