var blessed = require('blessed'),
  contrib = require('blessed-contrib'),
  monitor = require('./monitor');


var screen = blessed.screen()
var grid = new contrib.grid({
  rows: 98,
  cols: 100,
  screen: screen
})

var cpuLine = grid.set(0, 4, 36, 98, contrib.line, {
  showNthLabel: 5,
  maxY: 100,
  label: 'CPU',
  showLegend: true,
})

var memLine = grid.set(100, 4, 36, 98, contrib.line, {
  showNthLabel: 5,
  maxY: 100,
  label: 'Memory and Swap',
  showLegend: true,
  legend: {
    width: 10
  }
})

var memDonut = grid.set(37, 4, 19, 98, contrib.donut, {
  radius: 8,
  arcWidth: 3,
  yPadding: 2,
  remainColor: 'black',
  label: 'Memory',
});

var swapDonut = grid.set(100, 4, 19, 98, contrib.donut, {
  radius: 8,
  arcWidth: 3,
  yPadding: 2,
  remainColor: 'black',
  label: 'Swap',
});

var netSpark = grid.set(76, 4, 22, 98, contrib.sparkline, {
  label: 'Network',
  tags: true,
  style: {
    fg: 'blue'
  }
})

var diskDonut = grid.set(57, 4, 19, 98, contrib.donut, {
  radius: 8,
  arcWidth: 3,
  yPadding: 2,
  remainColor: 'black',
  label: 'Disk',
})

screen.render();
screen.on('resize', function(a) {
  cpuLine.emit('attach');
  memLine.emit('attach');
  memDonut.emit('attach');
  swapDonut.emit('attach');
  netSpark.emit('attach');
  diskDonut.emit('attach');
});

screen.key(['escape', 'q', 'C-c'], function(ch, key) {
  return process.exit(0);
});

function init() {
  new monitor.Cpu(cpuLine); //no Windows support
  new monitor.Mem(memLine, memDonut,swapDonut);
  new monitor.Net(netSpark);
  new monitor.Disk(diskDonut);
}


process.on('uncaughtException', function(err) {
  // avoid exiting due to unsupported system resources in Windows
});

module.exports = {
  init: init,
  monitor: monitor
};
